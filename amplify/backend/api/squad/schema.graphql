type Sways @model @auth(rules: [{ allow: public }]) {
  id: ID!
  Squads: [Squad] @hasMany(indexName: "bySways", fields: ["id"])
  Users: [User] @hasMany(indexName: "bySways", fields: ["id"])
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  username: String!
  imageUrl: String
  numOfPolls: Int!
  squad: [Squad] @manyToMany(relationName: "UserSquad")
  interests: [String]!
  polls: [Poll] @hasMany(indexName: "byUser", fields: ["id"])
  swaysID: ID @index(name: "bySways")
}

type Squad @model @auth(rules: [{ allow: public }]) {
  id: ID!
  users: [User] @manyToMany(relationName: "UserSquad")
  polls: [Poll] @hasMany(indexName: "bySquad", fields: ["id"])
  swaysID: ID! @index(name: "bySways")
  name: String
}

type Poll @model @auth(rules: [{ allow: public }]) {
  id: ID!
  caption: String!
  images: [String]
  user: [User]
  createdAt: AWSDateTime!
  userID: ID!
    @index(name: "byUser")
    @index(
      name: "bySquad"
      sortKeyFields: ["createdAt"]
      queryField: "listPollsBySquad"
    )
  squad: [Squad]
  category: String!
  votes: Int
  feedback: Float
}
