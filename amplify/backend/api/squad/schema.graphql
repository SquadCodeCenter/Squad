type PollComment @model @auth(rules: [{ allow: public }]) {
  id: ID!
  pollID: ID! @index(name: "byPoll")
  userID: ID! @index(name: "byUser")
  numOfLikes: Int
}

type Poll @model @auth(rules: [{ allow: public }]) {
  id: ID!
  totalNumOfVotes: Int
  pollMedia: [String]
  closed: Boolean
  open: Boolean
  userID: ID! @index(name: "byUser")
  numOfLikes: Int
  pollAudience: [String]
  squadID: ID! @index(name: "bySquad")
  pollCaption: String
  pollLabel: String
  pollScore: Int
  pollItems: [AWSJSON]
  PollComments: [PollComment] @hasMany(indexName: "byPoll", fields: ["id"])
}

type Squad @model @auth(rules: [{ allow: public }]) {
  id: ID!
  Users: [User] @manyToMany(relationName: "SquadUser")
  authUserID: String
  squadName: String
  numOfPolls: Int
  Polls: [Poll] @hasMany(indexName: "bySquad", fields: ["id"])
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  userName: String
  imageUrl: String
  userSquadId: String
  numOfPolls: Int
  numOfSquadron: Int
  userInterests: [String]
  squads: [Squad] @manyToMany(relationName: "SquadUser")
  Polls: [Poll] @hasMany(indexName: "byUser", fields: ["id"])
  PollComments: [PollComment] @hasMany(indexName: "byUser", fields: ["id"])
}
